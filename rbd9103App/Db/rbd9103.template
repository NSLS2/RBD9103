#
# EPICS database file for the RBD9103 PicoAmmeter
#

record(stringin, "$(P)$(R)DeviceDesc_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_DEVICE_DESC")
    field(SCAN, "I/O Intr")
}
record(stringin, "$(P)$(R)Manufacturer_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_MANUFACTURER")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)FwVersion_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_FW_VERSION")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)State_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_STATE")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)Build_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_BUILD_DATE")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DeviceID_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_DEVICE_ID")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)Model_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_MODEL")
    field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)DrvVersion_RBV"){
    field(DTYP, "asynOctetRead")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_DRV_VERSION")
    field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)NumDigits"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_NUM_DIGITS")
    field(ZRVL, "0")
    field(ZRST, "5")
    field(ONVL, "1")
    field(ONST, "6")
    field(TWVL, "2")
    field(TWST, "7")
    field(THVL, "3")
    field(THST, "8")
    field(PINI, "YES")
    field(VAL, "0")
}

record(mbbi, "$(P)$(R)NumDigits_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_NUM_DIGITS")
    field(ZRVL, "0")
    field(ZRST, "5")
    field(ONVL, "1")
    field(ONST, "6")
    field(TWVL, "2")
    field(TWST, "7")
    field(THVL, "3")
    field(THST, "8")
    field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)Range"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_RANGE")
    field(ZRVL, "0")
    field(ZRST, "Auto")
    field(ONVL, "1")
    field(ONST, "2nA")
    field(TWVL, "2")
    field(TWST, "20nA")
    field(THVL, "3")
    field(THST, "200nA")
    field(FRVL, "4")
    field(FRST, "2uA")
    field(FVVL, "5")
    field(FVST, "20uA")
    field(SXVL, "6")
    field(SXST, "200uA")
    field(SVVL, "7")
    field(SVST, "2mA")
    field(VAL, "0")
}

record(mbbi, "$(P)$(R)Range_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_RANGE")
    field(ZRVL, "0")
    field(ZRST, "Auto")
    field(ONVL, "1")
    field(ONST, "2nA")
    field(TWVL, "2")
    field(TWST, "20nA")
    field(THVL, "3")
    field(THST, "200nA")
    field(FRVL, "4")
    field(FRST, "2uA")
    field(FVVL, "5")
    field(FVST, "20uA")
    field(SXVL, "6")
    field(SXST, "200uA")
    field(SVVL, "7")
    field(SVST, "2mA")
    field(VAL, "1")
    field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(R)RangeActual_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_RANGE_ACTUAL")
    field(ZRVL, "0")
    field(ZRST, "Auto")
    field(ONVL, "1")
    field(ONST, "2nA")
    field(TWVL, "2")
    field(TWST, "20nA")
    field(THVL, "3")
    field(THST, "200nA")
    field(FRVL, "4")
    field(FRST, "2uA")
    field(FVVL, "5")
    field(FVST, "20uA")
    field(SXVL, "6")
    field(SXST, "200uA")
    field(SVVL, "7")
    field(SVST, "2mA")
    field(VAL, "1")
    field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)InputGnd"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_INPUT_GND")
    field(ZNAM, "Normal")
    field(ONAM, "Grounded")
    field(VAL, "0")
}

record(bi, "$(P)$(R)InputGnd_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_INPUT_GND")
    field(ZNAM, "Normal")
    field(ONAM, "Grounded")
    field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)Bias"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_BIAS")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(VAL, "0")
}
record(bi, "$(P)$(R)Bias_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_BIAS")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)OffsetNull"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_OFFSET_NULL")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(VAL, "0")
    field(PINI, "YES")
}
record(bi, "$(P)$(R)OffsetNull_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_OFFSET_NULL")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

# record(bo, "$(P)$(R)HighSpeed"){
#     field(DTYP, "asynInt32")
#     field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_HIGH_SPEED")
#     field(ZRVL, "0")
#     field(ZRST, "Off")
#     field(ONVL, "1")
#     field(ONST, "On")
#     field(PINI, "NO")
#     field(VAL, "0")
# }

# record(bi, "$(P)$(R)HighSpeed_RBV"){
#     field(DTYP, "asynInt32")
#     field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_HIGH_SPEED")
#     field(ZRVL, "0")
#     field(ZRST, "Off")
#     field(ONVL, "1")
#     field(ONST, "On")
#     field(SCAN, "I/O Intr")
# }

record(ao, "$(P)$(R)SamplingRate"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLING_RATE")
    field(LOLO, "20")
    field(HIHI, "9999")
    field(EGU, "ms")
    field(PINI, "YES")
    field(VAL, "0")
}

record(ai, "$(P)$(R)SamplingRate_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLING_RATE")
    field(LOLO, "20")
    field(HIHI, "9999")
    field(EGU, "ms")
    field(SCAN, "I/O Intr")
    field(VAL, "0")
}

record(ai, "$(P)$(R)SamplingRateActual_RBV") {
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLING_RATE_ACTUAL")
    field(LOLO, "20")
    field(HIHI, "9999")
    field(EGU, "ms")
    field(SCAN, "I/O Intr")
    field(VAL, "0")
}

record(mbbi, "$(P)$(R)InRange_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_IN_RANGE")
    field(ZRVL, "0")
    field(ZRST, "OK")
    field(ONVL, "1")
    field(ONST, "Under")
    field(TWVL, "2")
    field(TWST, "Over")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}


record(ai, "$(P)$(R)Current_RBV"){
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_CURRENT")
    field(SCAN, "I/O Intr")
    field(PREC, "5")
    field(VAL, "0")
}


record(bo, "$(P)$(R)Sample"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLE")
    field(ZNAM, "Idle")
    field(ONAM, "Sampling")
    field(PINI, "NO")
    field(VAL, "0")
}

record(bi, "$(P)$(R)Sample_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLE")
    field(ZNAM, "Idle")
    field(ONAM, "Sampling")
    field(SCAN, "I/O Intr")
    field(VAL, "0")
}

record(mbbo, "$(P)$(R)SamplingMode"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLING_MODE")
    field(ZRVL, "0")
    field(ZRST, "Single")
    field(ONVL, "1")
    field(ONST, "Multiple")
    field(TWVL, "2")
    field(TWST, "Continuous")
    field(PINI, "YES")
    field(VAL, "0")
}

record(mbbi, "$(P)$(R)SamplingMode_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLING_MODE")
    field(ZRVL, "0")
    field(ZRST, "Single")
    field(ONVL, "1")
    field(ONST, "Multiple")
    field(TWVL, "2")
    field(TWST, "Continuous")
    field(VAL, "0")
    field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)NumSamples"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_NUM_SAMPLES")
    field(PINI, "YES")
    field(VAL, "0")
}

record(ai, "$(P)$(R)NumSamples_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_NUM_SAMPLES")
    field(SCAN, "I/O Intr")
    field(VAL, "0")
}

record(ai, "$(P)$(R)SampleCounter_RBV") {
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_SAMPLE_COUNTER")
    field(SCAN, "I/O Intr")
    field(VAL, "0")
}

record(bi, "$(P)$(R)Stable_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_STABLE")
    field(ZNAM, "Not Stable")
    field(ONAM, "Stable")
    field(SCAN, "I/O Intr")
}


record(mbbo, "$(P)$(R)Filter"){
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_FILTER")
    field(ZRVL, "0")
    field(ZRST, "0")
    field(ONVL, "1")
    field(ONST, "2")
    field(TWVL, "2")
    field(TWST, "4")
    field(THVL, "3")
    field(THST, "8")
    field(FRVL, "4")
    field(FRST, "16")
    field(FVVL, "5")
    field(FVST, "32")
    field(SXVL, "6")
    field(SXST, "64")
    field(VAL, "0")
}

record(mbbi, "$(P)$(R)Filter_RBV"){
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_FILTER")
    field(ZRVL, "0")
    field(ZRST, "0")
    field(ONVL, "1")
    field(ONST, "2")
    field(TWVL, "2")
    field(TWST, "4")
    field(THVL, "3")
    field(THST, "8")
    field(FRVL, "4")
    field(FRST, "16")
    field(FVVL, "5")
    field(FVST, "32")
    field(SXVL, "6")
    field(SXST, "64")
    field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)CurrentUnits") {
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_CURRENT_UNITS")
    field(ZRVL, "0")
    field(ZRST, "nA")
    field(ONVL, "1")
    field(ONST, "uA")
    field(TWVL, "2")
    field(TWST, "mA")
    field(VAL, "0")
}

record(mbbi, "$(P)$(R)CurrentUnits_RBV") {
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_CURRENT_UNITS")
    field(ZRVL, "0")
    field(ZRST, "nA")
    field(ONVL, "1")
    field(ONST, "uA")
    field(TWVL, "2")
    field(TWST, "mA")
    field(SCAN, "I/O Intr")
}

record(ai, "$(P)$(R)AvgCurrent_RBV") {
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_AVG_CURRENT")
    field(SCAN, "I/O Intr")
    field(VAL, "0")
}


record(bo, "$(P)$(R)AvgOnlyStable") {
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_AVG_ONLY_STABLE")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(PINI, "YES")
    field(VAL, "1")
}

record(bi, "$(P)$(R)AvgOnlyStable_RBV") {
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR=0),$(TIMEOUT=1))RBD_AVG_ONLY_STABLE")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(SCAN, "I/O Intr")
}
